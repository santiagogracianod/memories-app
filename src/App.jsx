import React, { useState, useRef, useEffect } from "react";
import { Carousel } from "primereact/carousel";
import { Card } from "primereact/card";
import { Button } from "primereact/button";
import { Dialog } from "primereact/dialog";
import { Toast } from "primereact/toast";
import "./App.css"; // Importa el archivo CSS

const MemoriesApp = () => {
  const [visible, setVisible] = useState(false);
  const [response, setResponse] = useState(null);
  const [windowSize, setWindowSize] = useState({
    width: typeof window !== "undefined" ? window.innerWidth : 1200,
    height: typeof window !== "undefined" ? window.innerHeight : 800,
  });
  const toast = useRef(null);

  useEffect(() => {
    const handleResize = () => {
      setWindowSize({
        width: window.innerWidth,
        height: window.innerHeight,
      });
    };

    window.addEventListener("resize", handleResize);
    return () => window.removeEventListener("resize", handleResize);
  }, []);

  // Determinar si estamos en m√≥vil
  const isMobile = windowSize.width < 768;

  const images = [
    {
      id: 1,
      url: "/images/DSC_0496.jpeg",
      alt: "Nuestro primer recuerdo",
    },
    { id: 2, url: "/images/foto2.jpeg", alt: "Momentos especiales" },
    { id: 3, url: "/images/foto3.jpeg", alt: "Atardeceres juntos" },
    { id: 4, url: "/images/foto4.jpeg", alt: "Caminando de la mano" },
    { id: 5, url: "/images/foto5.jpeg", alt: "Momentos inolvidables" },
    { id: 6, url: "/images/foto6.jpeg", alt: "Juntos por siempre" },
  ];

  const details = [
    "V√≠stete como la persona m√°s especial del mundo (porque lo eres)",
    "Trae esa sonrisa que hace que mi mundo gire",
    "Prep√°rate para recibir todo mi amor",
    "Solo necesito tu presencia para ser feliz",
  ];

  const romanticMessages = [
    "Cada latido de mi coraz√≥n lleva tu nombre",
    "Eres el sue√±o que nunca quise despertar",
    "En un mundo de temporadas, t√∫ eres mi eterno verano",
    "Tu amor es la melod√≠a que alegra mis d√≠as",
  ];

  const imageTemplate = (image) => (
    <div className="carousel-item-container">
      <img src={image.url} alt={image.alt} className="carousel-image" />
      <div className="carousel-caption">
        <h3 className="caption-title">
          {romanticMessages[image.id % romanticMessages.length]}
        </h3>
        <p className="caption-subtitle">Un cap√≠tulo m√°s de nuestra historia</p>
      </div>
    </div>
  );

  const handleResponse = (answer) => {
    setResponse(answer);
    if (answer === "yes") {
      setVisible(true);
      toast.current.show({
        severity: "success",
        summary: "¬°Mi coraz√≥n baila de alegr√≠a!",
        detail: "Sab√≠a que dir√≠as que s√≠, mi amor üíò",
        life: 3000,
      });
    } else {
      toast.current.show({
        severity: "warn",
        summary: "Espera...",
        detail: "Vuelve a mirar nuestras fotos y reconsidera üíî",
        life: 3000,
      });
    }
  };

  // Contenido del di√°logo
  const dialogContent = (
    <div className="dialog-content">
      <p className="dialog-intro">
        "Para hacer de esta noche tan perfecta como t√∫..."
      </p>
      <ul className="detail-list">
        {details.map((item, index) => (
          <li key={index} className="detail-item">
            <span className="detail-icon">‚ù§</span>
            <span className="detail-text">{item}</span>
          </li>
        ))}
      </ul>
      <p className="dialog-footer">
        Adem√°s de tu mejor sonrisa, trae algo c√≥modo para la cena y un cambio de
        ropa. Ah, y si quieres disfrutar al m√°ximo, algo para el jacuzzi tampoco
        estar√≠a mal. üòâ
      </p>
    </div>
  );

  // Contenido del footer del di√°logo
  const dialogFooter = (
    <div className="dialog-button-container">
      <Button
        label="¬°Estar√© all√≠!"
        icon="pi pi-heart-fill"
        onClick={() => setVisible(false)}
        className="confirm-button"
      />
    </div>
  );

  return (
    <div className="app-container">
      <Toast ref={toast} />

      <div className="content-container">
        {/* T√≠tulo */}
        <div className="title-container">
          <h1 className="main-title">Nuestra Historia de Amor</h1>
          <p className="subtitle">
            "Donde dos almas se encuentran y el tiempo se detiene"
          </p>
          <div className="heart-icon">üíñ</div>
        </div>

        {/* Carrusel */}
        <div className="carousel-container">
          <Carousel
            value={images}
            itemTemplate={imageTemplate}
            numVisible={1}
            numScroll={1}
            circular
            autoplayInterval={4000}
            className="custom-carousel"
          />
        </div>

        {/* Tarjeta de invitaci√≥n */}
        <Card
          title="¬øAceptas compartir esta noche m√°gica conmigo?"
          subTitle="Una velada creada especialmente para ti"
          className="invitation-card"
        >
          <div className="card-content">
            <p className="invitation-text">
              "Te invito a una noche en la que solo existamos t√∫ y yo. Un
              espacio para compartir, re√≠r y seguir escribiendo nuestra
              historia. ¬øLista para aceptar esta aventura juntos?"
            </p>

            <div className="button-container">
              <Button
                label="S√≠, mi amor"
                icon="pi pi-heart-fill"
                onClick={() => handleResponse("yes")}
                className="yes-button"
              />
              <Button
                label="No esta vez"
                icon="pi pi-heart"
                onClick={() => handleResponse("no")}
                className="no-button"
              />
            </div>
          </div>
        </Card>

        {/* Di√°logo de confirmaci√≥n */}
        <Dialog
          header="¬°Nuestra noche especial! üí´"
          visible={visible}
          onHide={() => setVisible(false)}
          footer={dialogFooter}
          className="confirmation-dialog"
          dismissableMask
        >
          {dialogContent}
        </Dialog>
      </div>

      {/* Efecto de corazones flotantes (para todos los dispositivos) */}
      <div className="hearts-container">
        {[...Array(isMobile ? 8 : 15)].map((_, i) => (
          <div
            key={i}
            className="floating-heart"
            style={{
              top: `${Math.random() * 100}%`,
              left: `${Math.random() * 100}%`,
              animationDuration: `${Math.random() * 10 + 10}s`,
              animationDelay: `${Math.random() * 5}s`,
              transform: `scale(${Math.random() * 0.7 + 0.3})`,
            }}
          >
            ‚ù§
          </div>
        ))}
      </div>
    </div>
  );
};

export default MemoriesApp;
